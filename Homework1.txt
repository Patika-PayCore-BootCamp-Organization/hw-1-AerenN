Answers:
1-Because OOP insists that you think about what you expose to the outside world, it lets you change the implementation of an object without affecting any other code. (Encapsulation)
Because it allows you to have many different functions, all with the same name, all doing the same job, but on different data. (Polymorphism)
Because it lets you write generic code: which will work with a range of data, so you don't have to write basic stuff over, and over again. (Generics)
Because it lets you write a set of functions, then expand them in different direction without changing or copying them in any way. (Inheritance)

Python, Ruby, C++ etc are also Object Oriented Programming languages.

2-Interface: The codes and languages that applications use to refer to each other and with the hardware. It’s also a programming syntax responsible for imposing certain attributes of an object.
Abstraction: This is an OOP concept dedicated to handling complexities by concealing unnecessary details of a program from its users. The user is only presented with the relevant details allowing for efficient design and implantation of a program.

3-The equals() and hashcode() are the two important methods provided by the Object class for comparing objects. Since the Object class is the parent class for all Java objects, hence all objects inherit the default implementation of these two methods.
The java equals() is a method of lang.Object class, and it is used to compare two objects.
To compare two objects that whether they are the same, it compares the values of both the object's attributes.
By default, two objects will be the same only if stored in the same memory location.

When to override?
When you need to check equality of 2 objects inside a class, you override equals() because instances of a class are not the same object but different references.

4-Multiple Inheritance is a feature of an object-oriented concept, where a class can inherit properties of more than one parent class. The feature creates a problem when there exist methods with the same name and signature in both the super-class and sub-class. When we call the method, the compiler gets confused and cannot determine which class method to be called and even on calling which class method gets the priority.

The solution to the diamond problem is default methods and interfaces. The default method is similar to the abstract method. The only difference is that it is defined inside the interfaces with the default implementation. We need not to override these methods. Because they are already implementing these interfaces.

5-Java applications obtain objects in memory as needed. It is the task of garbage collection in the Java virtual machine to automatically determine what memory is no longer being used by a Java application and to recycle this memory for other uses. Because memory is automatically reclaimed in the java virtual machine, Java application developers are not burdened with having to explicitly free memory objects that are not being used.

6-The static keyword in Java is used for memory management. We can apply static keyword with variables, methods, blocks and nested classes.

7-Immutable simply means unmodifiable or unchangeable.

Make class Immutable by:
Final class, which is declared as final so that it can't be extended.
All fields should be private so that direct access to the fields is blocked.
No Setters.
All mutable fields should be as final so that they can not be iterated once initialized.

Why to use it? Possibly when you have a more conservative approach to your coding adventure. I mean when you dont want to change values, variables etc.

8-Aggregation is a form of relation between objects and classes. It represents Has-A’s relationship. It is a unidirectional relation i.e. a one-way relationship. For example, a department can have students but vice versa is not possible and thus unidirectional in nature. In Aggregation, both the entries can survive individually which means ending one entity will not affect the other entity.

Composition is a restricted form of Aggregation in which two entities are highly dependent on each other. It represents part-of relationship. In composition, both entities are dependent on each other. When there is a composition between two entities, the composed object cannot exist without the other entity. Like parts of a vehicle.

9-Cohesion refers to the extent to which a class is defined to do a specific specialized task. A class created with high cohesion is targeted towards a single specific purpose, rather than performing many different purposes. 

The degree of dependency between the components is called coupling. If the dependency is more, then it is considered as tight coupling. And if the dependency is less, then it is called loose coupling.

10-The stack memory is a physical space (in RAM) allocated to each thread at run time. It is created when a thread creates. Memory management in the stack follows LIFO (Last-In-First-Out) order because it is accessible globally. It stores the variables, references to objects, and partial results. Memory allocated to stack lives until the function returns. If there is no space for creating the new objects, it throws the java.lang.StackOverFlowError. The scope of the elements is limited to their threads. The JVM creates a separate stack for each thread.

Heap Memory is created when the JVM starts up and used by the application as long as the application runs. It stores objects and JRE classes. Whenever we create objects it occupies space in the heap memory while the reference of that object creates in the stack. It does not follow any order like the stack. It dynamically handles the memory blocks. It means, we need not to handle the memory manually. For managing the memory automatically, Java provides the garbage collector that deletes the objects which are no longer being used. Memory allocated to heap lives until any one event, either program terminated or memory free does not occur. The elements are globally accessible in the application. It is a common memory space shared with all the threads. If the heap space is full, it throws the java.lang.OutOfMemoryError.

11-Exception is an event that occurs during the execution of a program and disrupts the normal flow of the program's instructions. Bugs or errors that we don't want and restrict our program's normal execution of code are referred to as exceptions.

Exceptions that are already available in Java libraries are referred to as built-in exception. These exceptions are able to define the error situation so that we can understand the reason of getting this error. Checked exceptions are called compile-time exceptions because these exceptions are checked at compile-time by the compiler. The compiler ensures whether the programmer handles the exception or not. The programmer should have to handle the exception; otherwise, the system has shown a compilation error. 
The compiler will not check unchecked exceptions at compile time. In simple words, if a program throws an unchecked exception, and even if we didn't handle or declare it, the program would not give a compilation error. Usually, it occurs when the user provides bad data during the interaction with the program.

We already have some built-in exception classes like ArrayIndexOutOfBoundsException, NullPointerException, and ArithmeticException. These exceptions are restricted to trigger on some predefined conditions. In Java, we can write our own exception class by extends the Exception class. We can throw our own exception on a particular condition using the throw keyword. For creating a user-defined exception, we should have basic knowledge of the try-catch block and throw keyword.

12-Clean code can be summarized as a code that any developer can read and change easily.

13-Encapsulation in Java is a mechanism of wrapping the variables and code acting on the methods together as a single unit. In encapsulation, the variables of a class will be hidden from other classes, and can be accessed only through the methods of their current class. Therefore, it is also known as data hiding.

To achieve encapsulation in Java:
Declare the variables of a class as private.
Do not provide public setter and getter methods to modify and view the variables values.

14-Abstraction is an OOP concept dedicated to handling complexities by concealing unnecessary details of a program from its users. The user is only presented with the relevant details allowing for efficient design and implantation of a program.
Polymorphism basically means many forms. It is an OOP technique that provides a single interface to multiple entities of diverse types. A message can be made to take different display forms through polymorphism. This is askin to a person behaving differently in different situations.
